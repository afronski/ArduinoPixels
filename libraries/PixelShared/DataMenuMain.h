//generated pixeldata
#ifndef _DataMenuMain_h
#define _DataMenuMain_h
#include "PixelData.h"
namespace _MenuMain_ {
    const uint8_t indices[516] = {
        255
        ,255
        ,0
        ,0
        ,0
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,4
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,8
        ,8
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,0
        ,0
        ,0
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,4
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,8
        ,8
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,0
        ,0
        ,0
        ,255
        ,0
        ,0
        ,0
        ,0
        ,0
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,12
        ,12
        ,12
        ,12
        ,12
        ,12
        ,255
        ,255
        ,16
        ,255
        ,255
        ,255
        ,255
        ,8
        ,8
        ,8
        ,8
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,0
        ,0
        ,0
        ,0
        ,0
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,12
        ,12
        ,12
        ,12
        ,12
        ,12
        ,255
        ,255
        ,16
        ,255
        ,255
        ,255
        ,255
        ,8
        ,8
        ,8
        ,8
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,0
        ,0
        ,0
        ,0
        ,0
        ,255
        ,0
        ,20
        ,20
        ,20
        ,20
        ,255
        ,255
        ,24
        ,255
        ,24
        ,255
        ,255
        ,24
        ,24
        ,255
        ,12
        ,24
        ,24
        ,24
        ,24
        ,12
        ,255
        ,255
        ,28
        ,255
        ,255
        ,255
        ,8
        ,20
        ,20
        ,20
        ,20
        ,255
        ,255
        ,255
        ,24
        ,255
        ,255
        ,0
        ,20
        ,20
        ,20
        ,20
        ,255
        ,255
        ,24
        ,255
        ,24
        ,255
        ,255
        ,24
        ,24
        ,255
        ,12
        ,24
        ,24
        ,24
        ,24
        ,12
        ,255
        ,255
        ,28
        ,255
        ,255
        ,255
        ,8
        ,20
        ,20
        ,20
        ,20
        ,255
        ,255
        ,24
        ,255
        ,24
        ,255
        ,255
        ,24
        ,24
        ,255
        ,0
        ,20
        ,20
        ,20
        ,20
        ,255
        ,0
        ,20
        ,32
        ,20
        ,32
        ,255
        ,255
        ,24
        ,255
        ,24
        ,255
        ,255
        ,24
        ,255
        ,255
        ,12
        ,32
        ,24
        ,32
        ,24
        ,12
        ,255
        ,255
        ,28
        ,255
        ,255
        ,255
        ,8
        ,20
        ,32
        ,20
        ,32
        ,255
        ,255
        ,24
        ,24
        ,24
        ,255
        ,0
        ,20
        ,32
        ,20
        ,32
        ,255
        ,255
        ,24
        ,255
        ,24
        ,255
        ,255
        ,24
        ,255
        ,255
        ,12
        ,32
        ,24
        ,32
        ,24
        ,12
        ,255
        ,255
        ,28
        ,255
        ,255
        ,255
        ,8
        ,20
        ,32
        ,20
        ,32
        ,255
        ,255
        ,24
        ,255
        ,24
        ,255
        ,255
        ,24
        ,255
        ,255
        ,0
        ,20
        ,32
        ,20
        ,32
        ,255
        ,255
        ,20
        ,20
        ,20
        ,20
        ,255
        ,255
        ,255
        ,24
        ,255
        ,255
        ,24
        ,24
        ,255
        ,255
        ,12
        ,24
        ,24
        ,24
        ,24
        ,12
        ,255
        ,255
        ,16
        ,255
        ,255
        ,8
        ,8
        ,20
        ,20
        ,20
        ,20
        ,8
        ,255
        ,255
        ,24
        ,255
        ,255
        ,255
        ,20
        ,20
        ,20
        ,20
        ,255
        ,255
        ,255
        ,24
        ,255
        ,255
        ,24
        ,24
        ,255
        ,255
        ,12
        ,24
        ,24
        ,24
        ,24
        ,12
        ,255
        ,255
        ,16
        ,255
        ,255
        ,8
        ,8
        ,20
        ,20
        ,20
        ,20
        ,8
        ,255
        ,255
        ,24
        ,255
        ,255
        ,24
        ,24
        ,255
        ,255
        ,255
        ,20
        ,20
        ,20
        ,20
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,12
        ,12
        ,12
        ,12
        ,12
        ,12
        ,255
        ,255
        ,4
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,12
        ,12
        ,12
        ,12
        ,12
        ,12
        ,255
        ,255
        ,4
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
    };
    const uint8_t color[36] = {
        84
        ,60
        ,0
        ,255
        ,255
        ,255
        ,255
        ,66
        ,125
        ,90
        ,0
        ,255
        ,141
        ,198
        ,63
        ,255
        ,255
        ,255
        ,255
        ,83
        ,255
        ,198
        ,135
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,104
        ,0
        ,0
        ,0
        ,255
    };
}
struct DataMenuMain : public PixelDataImpl<DataMenuMain> {
       static constexpr uint8_t width() { return 86; }
       static constexpr uint8_t height() { return 6; }
       static constexpr const uint8_t* indices() { return _MenuMain_::indices; }
       static constexpr const uint8_t* color() { return _MenuMain_::color; }
       constexpr DataMenuMain(){}
};
#endif
