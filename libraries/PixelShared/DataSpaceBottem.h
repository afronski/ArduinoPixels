//generated pixeldata
#ifndef _DataSpaceBottem_h
#define _DataSpaceBottem_h
#include "PixelData.h"
namespace _SpaceBottem_ {
    const uint8_t indices[140] = {
        255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,0
        ,4
        ,8
        ,4
        ,0
        ,0
        ,12
        ,12
        ,12
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,16
        ,16
        ,16
        ,20
        ,24
        ,20
        ,16
        ,16
        ,16
        ,28
        ,28
        ,28
        ,28
        ,32
        ,255
        ,255
        ,255
        ,255
        ,36
        ,36
        ,36
        ,36
        ,40
        ,44
        ,40
        ,36
        ,36
        ,36
        ,36
        ,36
        ,48
        ,48
        ,48
        ,52
        ,52
        ,52
        ,255
        ,56
        ,56
        ,60
        ,64
        ,68
        ,72
        ,76
        ,56
        ,56
        ,56
        ,56
        ,56
        ,56
        ,56
        ,80
        ,84
        ,84
        ,84
        ,84
        ,88
        ,56
        ,56
        ,60
        ,64
        ,92
        ,96
        ,76
        ,56
        ,56
        ,56
        ,56
        ,56
        ,56
        ,56
        ,80
        ,84
        ,84
        ,84
        ,84
        ,88
        ,255
        ,36
        ,36
        ,36
        ,36
        ,40
        ,100
        ,40
        ,36
        ,36
        ,36
        ,36
        ,48
        ,48
        ,48
        ,48
        ,48
        ,48
        ,48
        ,255
        ,255
        ,255
        ,255
        ,104
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,104
        ,255
        ,255
        ,255
    };
    const uint8_t color[108] = {
        39
        ,45
        ,67
        ,255
        ,60
        ,65
        ,76
        ,255
        ,67
        ,72
        ,76
        ,255
        ,33
        ,40
        ,60
        ,255
        ,100
        ,108
        ,132
        ,255
        ,127
        ,131
        ,134
        ,255
        ,153
        ,155
        ,134
        ,255
        ,84
        ,90
        ,113
        ,255
        ,71
        ,77
        ,99
        ,255
        ,43
        ,50
        ,79
        ,255
        ,64
        ,71
        ,86
        ,255
        ,91
        ,96
        ,92
        ,255
        ,36
        ,43
        ,70
        ,255
        ,31
        ,37
        ,60
        ,255
        ,100
        ,108
        ,136
        ,255
        ,128
        ,132
        ,138
        ,255
        ,161
        ,161
        ,142
        ,255
        ,204
        ,200
        ,142
        ,255
        ,160
        ,160
        ,136
        ,255
        ,118
        ,123
        ,136
        ,255
        ,84
        ,90
        ,117
        ,255
        ,71
        ,77
        ,102
        ,255
        ,59
        ,65
        ,89
        ,255
        ,209
        ,204
        ,142
        ,255
        ,149
        ,150
        ,136
        ,255
        ,89
        ,94
        ,92
        ,255
        ,23
        ,27
        ,45
        ,255
    };
}
template<int8_t WidthOffset=0, int8_t HeightOffset=0>
struct DataSpaceBottem : public PixelDataImpl<DataSpaceBottem<WidthOffset, HeightOffset> > {
       static constexpr uint8_t width() { return 20; }
       static constexpr uint8_t height() { return 7; }
       static constexpr int8_t widthOffset() { return WidthOffset; }
       static constexpr int8_t heightOffset() { return HeightOffset; }
       static constexpr const uint8_t* indices() { return _SpaceBottem_::indices; }
       static constexpr const uint8_t* color() { return _SpaceBottem_::color; }
       constexpr DataSpaceBottem(){}
};
#endif
