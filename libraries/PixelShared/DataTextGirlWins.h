//generated pixeldata
#ifndef _DataTextGirlWins_h
#define _DataTextGirlWins_h
#include "PixelData.h"
namespace _TextGirlWins_ {
    const uint8_t indices[784] = {
        255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,0
        ,0
        ,4
        ,4
        ,4
        ,4
        ,0
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,0
        ,4
        ,8
        ,12
        ,12
        ,12
        ,0
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,0
        ,0
        ,4
        ,8
        ,8
        ,8
        ,8
        ,0
        ,0
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,255
        ,255
        ,255
        ,255
        ,255
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,4
        ,4
        ,12
        ,12
        ,12
        ,12
        ,4
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,255
        ,0
        ,0
        ,16
        ,16
        ,16
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,16
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,0
        ,255
        ,255
        ,255
        ,255
        ,0
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,16
        ,16
        ,16
        ,0
        ,0
        ,0
        ,16
        ,16
        ,0
        ,0
        ,0
        ,0
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,0
        ,255
        ,255
        ,255
        ,255
        ,0
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,16
        ,16
        ,0
        ,0
        ,0
        ,0
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,0
        ,255
        ,255
        ,255
        ,255
        ,0
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,0
        ,255
        ,255
        ,255
        ,255
        ,0
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,16
        ,16
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,16
        ,16
        ,0
        ,0
        ,255
        ,0
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,16
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,0
        ,255
        ,255
        ,255
        ,255
        ,0
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,16
        ,0
        ,0
        ,0
        ,0
        ,0
        ,16
        ,16
        ,0
        ,0
        ,0
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,0
        ,0
        ,0
        ,255
        ,255
        ,0
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,0
        ,0
        ,0
        ,0
        ,16
        ,16
        ,0
        ,0
        ,0
        ,0
        ,16
        ,16
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,16
        ,16
        ,16
        ,0
        ,0
        ,255
        ,0
        ,0
        ,16
        ,16
        ,16
        ,16
        ,16
        ,16
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,0
        ,0
        ,16
        ,16
        ,0
        ,16
        ,16
        ,16
        ,16
        ,16
        ,0
        ,0
        ,0
        ,255
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,255
        ,255
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,255
        ,255
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,255
        ,255
        ,255
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,0
        ,255
    };
    const uint8_t color[20] = {
        121
        ,0
        ,0
        ,255
        ,255
        ,234
        ,0
        ,255
        ,255
        ,201
        ,135
        ,255
        ,255
        ,198
        ,135
        ,255
        ,249
        ,103
        ,144
        ,255
    };
}
struct DataTextGirlWins : public PixelDataImpl<DataTextGirlWins> {
       static constexpr uint8_t width() { return 56; }
       static constexpr uint8_t height() { return 14; }
       static constexpr const uint8_t* indices() { return _TextGirlWins_::indices; }
       static constexpr const uint8_t* color() { return _TextGirlWins_::color; }
};
#endif
