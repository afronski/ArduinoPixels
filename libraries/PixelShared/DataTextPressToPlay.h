//generated pixeldata
#ifndef _DataTextPressToPlay_h
#define _DataTextPressToPlay_h
#include "PixelData.h"
namespace _TextPressToPlay_ {
    const uint8_t indices[513] = {
        255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,0
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,0
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,0
        ,0
        ,0
        ,255
        ,255
        ,0
        ,255
        ,0
        ,255
        ,255
        ,0
        ,0
        ,0
        ,255
        ,255
        ,0
        ,0
        ,0
        ,255
        ,255
        ,0
        ,0
        ,0
        ,255
        ,255
        ,255
        ,255
        ,0
        ,4
        ,0
        ,255
        ,255
        ,0
        ,0
        ,255
        ,255
        ,255
        ,255
        ,255
        ,0
        ,0
        ,0
        ,255
        ,0
        ,4
        ,0
        ,255
        ,0
        ,0
        ,255
        ,255
        ,0
        ,255
        ,255
        ,0
        ,255
        ,0
        ,4
        ,4
        ,4
        ,0
        ,0
        ,4
        ,0
        ,4
        ,0
        ,0
        ,4
        ,4
        ,4
        ,0
        ,0
        ,4
        ,4
        ,4
        ,0
        ,0
        ,4
        ,4
        ,4
        ,0
        ,255
        ,255
        ,0
        ,4
        ,4
        ,4
        ,0
        ,0
        ,4
        ,4
        ,0
        ,255
        ,255
        ,255
        ,0
        ,4
        ,4
        ,4
        ,0
        ,0
        ,4
        ,0
        ,0
        ,4
        ,4
        ,0
        ,0
        ,4
        ,0
        ,0
        ,4
        ,0
        ,0
        ,4
        ,0
        ,0
        ,4
        ,0
        ,4
        ,4
        ,0
        ,0
        ,4
        ,0
        ,0
        ,4
        ,0
        ,4
        ,4
        ,0
        ,0
        ,0
        ,4
        ,4
        ,0
        ,0
        ,255
        ,255
        ,255
        ,255
        ,0
        ,4
        ,0
        ,0
        ,4
        ,0
        ,0
        ,4
        ,0
        ,255
        ,255
        ,0
        ,4
        ,0
        ,0
        ,4
        ,0
        ,4
        ,0
        ,4
        ,0
        ,0
        ,4
        ,0
        ,4
        ,0
        ,0
        ,4
        ,0
        ,0
        ,4
        ,0
        ,0
        ,4
        ,0
        ,4
        ,0
        ,255
        ,0
        ,4
        ,0
        ,4
        ,0
        ,255
        ,0
        ,0
        ,4
        ,4
        ,0
        ,0
        ,0
        ,4
        ,4
        ,0
        ,255
        ,255
        ,255
        ,0
        ,4
        ,0
        ,0
        ,4
        ,0
        ,0
        ,4
        ,0
        ,255
        ,255
        ,0
        ,4
        ,0
        ,0
        ,4
        ,0
        ,4
        ,0
        ,4
        ,0
        ,0
        ,4
        ,0
        ,4
        ,0
        ,0
        ,4
        ,0
        ,0
        ,4
        ,4
        ,4
        ,0
        ,0
        ,4
        ,0
        ,255
        ,255
        ,0
        ,4
        ,4
        ,4
        ,0
        ,4
        ,4
        ,4
        ,0
        ,0
        ,4
        ,4
        ,4
        ,0
        ,255
        ,255
        ,255
        ,255
        ,0
        ,4
        ,0
        ,255
        ,0
        ,4
        ,4
        ,0
        ,255
        ,255
        ,255
        ,0
        ,4
        ,4
        ,4
        ,0
        ,0
        ,4
        ,0
        ,0
        ,4
        ,4
        ,4
        ,0
        ,0
        ,4
        ,4
        ,4
        ,0
        ,0
        ,4
        ,0
        ,0
        ,255
        ,255
        ,0
        ,255
        ,255
        ,255
        ,255
        ,0
        ,0
        ,0
        ,255
        ,0
        ,0
        ,0
        ,255
        ,255
        ,0
        ,0
        ,0
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,0
        ,255
        ,255
        ,255
        ,0
        ,0
        ,255
        ,255
        ,255
        ,255
        ,0
        ,4
        ,0
        ,0
        ,255
        ,255
        ,0
        ,255
        ,255
        ,0
        ,0
        ,0
        ,255
        ,255
        ,0
        ,0
        ,4
        ,0
        ,0
        ,4
        ,0
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,0
        ,4
        ,0
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,0
        ,4
        ,4
        ,0
        ,255
        ,255
        ,0
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,0
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,255
        ,0
        ,0
        ,255
        ,255
    };
    const uint8_t color[8] = {
        0
        ,0
        ,0
        ,255
        ,255
        ,255
        ,255
        ,255
    };
}
struct DataTextPressToPlay : public PixelDataImpl<DataTextPressToPlay> {
       static constexpr uint8_t width() { return 57; }
       static constexpr uint8_t height() { return 9; }
       static constexpr const uint8_t* indices() { return _TextPressToPlay_::indices; }
       static constexpr const uint8_t* color() { return _TextPressToPlay_::color; }
       constexpr DataTextPressToPlay(){}
};
#endif
